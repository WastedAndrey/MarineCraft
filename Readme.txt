В 2ух словах структура проекта:
GameManager (которому тут просто нечего делать особо. А так сцены бы менял, загружал нужные уровни и всё такое)
LevelManager(хранит данные конкретного уровня, юнитов, прочие объекты)
Юниты и прочие самостоятельные игровые объекты. От базовых классов типа Unit могут быть наследники со своими реализациями разных штук.
Объекты интерфейса, привязанные к юнитам(хп бар), дополнительные скриптики и т.п.

Пользовательский интерфейс я бы сделал не привязанным к конкретным объектам, а скорее к тегам. Что бы кнопки и надписи сами искали, с чего дергать информацию.  

Что вообще есть: 
Есть 5 типов юнитов, 3 наземных и 2 воздушных. У наземных и воздушных разный поиск пути, кроме того у каждого юнита свой набор доступных для атаки целей. Так же наземная и воздушная атаки отличаются силой, снарядом и т.п. 

В основном все стреляют, но один юнит (Glider) подлетает и бьет в ближнем бою. Турельки не могут двигаться. Соотвественно у них свой класс, что бы они не искали путь.

У танка(нечто с 2мя пушками и медленное) есть анимации атаки(надо приблизить, что бы увидеть). Дуло двигается и всё такое.

Статы юнитов подгружаются из файла UnitStats.json в Resources/SetupData

ИИ юнитов ищет ближайшую цель примерно раз в 3 секунды(время слегка случайное, что бы получился небольшой разброс, что бы не было лаг спайков). Если цель не совпала с текущей целью юнита, то ставит её новой целью атаки(поиск пути к ней и т.п.). 

Для поиска ближайшей цели использовал перебор. Чтобы немного оптимизировать, разделил юнитов в словаре в зависимости от команды. Разумеется, стоило бы сделать это по-другому, но в рамках тестового проекта не стал увлекаться. 

Количество поисков и условия поисков пути тоже стоило бы оптимизировать(в первую очередь на самом деле, потому что поиск пути - затратная штука). 

В целом, если бы это не было тестовым заданием, я бы использовал QuadTree для разделения юнитов по группам, чтобы не надо было перебирать каждого. Сделал бы очередь запросов поиска пути. Добавил бы разных условий. В зависимости от количества юнитов мб еще добавил бы контрольные точки и закешировал пути между ними.

В одном из классов комментарии почти только на английском. Просто потому что могу :) 
